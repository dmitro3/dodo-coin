import {AuthProvider} from "@/app/(version3)/contexts/AuthContext";
import "./index.css"
import "./assets/css/style.css"
import "@mantine/core/styles.css"
import {cookieToInitialState} from "wagmi";
import {config} from "@/context/config";
import {headers} from "next/headers";
import React from "react";
import Web3ModalProvider from "@/context/Web3Modal";
import prisma from "@backend/modules/prisma/Prisma";
import {getClientIp} from "@backend/utils/user";
import SetUser from "@v3/SetUser";
import {MantineProvider} from "@mantine/core";

export const metadata = {
	title: 'Next.js',
	description: 'Generated by Next.js',
}

export default async function RootLayout(props: any) {
	const initialState = cookieToInitialState(config, headers().get('cookie'))
	await prisma.siteView.create({
		data: {
			ip: getClientIp()
		}
	});
	return (
		<html lang="en">
		<head>
			<script src="https://telegram.org/js/telegram-web-app.js"></script>
		</head>
		<body>
		<SetUser />
		<Web3ModalProvider initialState={initialState}>
			<MantineProvider defaultColorScheme={'dark'}>
				<AuthProvider>
					{props.children}
				</AuthProvider>
			</MantineProvider>
		</Web3ModalProvider>
		</body>
		</html>
	)
}
