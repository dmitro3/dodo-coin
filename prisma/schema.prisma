// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Float    @id
  joined_at DateTime @default(now())
  blocked   Boolean  @default(false)
  wallet    Float    @default(0)
  username  String?  @unique
  chatId    Float    @unique
  tapLvl    Int      @default(1)
  energy    Int      @default(10000)
  energyLvl Int      @default(1)
  chargeLvl Int      @default(1)
  lastTap   DateTime @default(now())
  refs      User[]   @relation("Ref")
  refId     Float?
  ref       User?    @relation(fields: [refId], references: [id], onDelete: Cascade, onUpdate: Cascade, "Ref")
  token     String   @unique @default(dbgenerated("(concat(gen_random_uuid(), gen_random_uuid(), gen_random_uuid(), gen_random_uuid(), gen_random_uuid()))::TEXT"))
}

model BotChannel {
  id          Int     @default(autoincrement()) @id
  botUsername String
  channelId   String
  chatId      String?

  @@unique([botUsername, channelId])
}
